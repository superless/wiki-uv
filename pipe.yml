# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- wikiMaster

pool:
  vmImage: 'ubuntu-latest'

steps:
<<<<<<< HEAD
=======
<<<<<<< HEAD
# instalando nodejs
- task: NodeTool@0
  inputs:
    versionSpec: '11.x'
  displayName: 'instalando node js'
# fin nodejs

- script: |
    ls -a
    mkdir ../github-docs
    mkdir ../github-docs/.attachments
    mv ./.attachments/* ../github-docs/.attachments
    mv ./* ../github-docs
    ls -a ../github-docs/
    
    git config --global user.email "alejandro.iglesias@trifenix.io"
    git config --global user.name "alejandro.iglesias"    
    git clone https://alejandro.iglesias:$(token)@dev.azure.com/yo-fenix/blog/_git/blog.wiki blg    
    
    cp -r ../github-docs/.attachments/* ./blg/.attachments     
    cp -r ../github-docs/* ./blg     
    
    cd blg    
    git add . && git commit -m "actualizacion documentacion"    
    git push origin wikiMaster    
    cd ..
    git clone https://alejandro.iglesias:$(token)@dev.azure.com/yo-fenix/blog/_git/blog web    
    cd web
    mkdir static
    mkdir static/.attachments
    mkdir content
    pwd
    
    cd ..
    cp -r ./blg/* ./web/content
    cp -r ./blg/.attachments/* ./web/static/.attachments

    pwd
    echo $(Build.SourcesDirectory)


  displayName: 'clone from github to wiki'


- task: replacetokens@3
  inputs:
    rootDirectory: '$(Build.SourcesDirectory)'
    targetFiles: '**/config.js'
    encoding: 'auto'
    writeBOM: true
    actionOnMissing: 'warn'
    keepToken: false
    tokenPrefix: '#{'
    tokenSuffix: '}#'
    useLegacyPattern: false
    enableTelemetry: false

#instalando gatsby
- script: |   
    npm install -g gatsby-cli
  displayName: 'instalando gatsby'
#fin gatsby

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'npm install'
    workingDirectory: '$(Build.SourcesDirectory)/web'
  displayName: 'npm install'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'npm install --save-dev @babel/plugin-proposal-export-default-from'
    workingDirectory: '$(Build.SourcesDirectory)/web'
  displayName: 'npm install babel'

#gatsby build
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'gatsby build'
    workingDirectory: '$(Build.SourcesDirectory)/web'
  displayName: 'gatsby build'
#fin gatsby build

#copiando archivos a salida
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/web/public'
    Contents: '**'
    TargetFolder: $(Build.ArtifactStagingDirectory)
    CleanTargetFolder: true
#fin copiando archivos a salida

#publicando artifacts
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: $(Build.ArtifactStagingDirectory)
    ArtifactName: 'drop'
    publishLocation: 'container'
#fin publicando artifacts




=======
>>>>>>> f1538349fc4a3c4f903cd91ea5e74d6e27bb1137




- script: |
    ls
    mkdir ../github
    cd ../github
    git config --global user.email "$(user)"
    git config --global user.name "$(email)"
    git clone https://$(user):$(token)@github.com/$(user)/wiki-uv.git

  displayName: "Paso1" 

- script: |
    cd ../github/wiki-uv
    ls -a
    git remote add upstream  https://github.com/trifenix/wiki-uv.git
    git fetch upstream
    
    git checkout --track origin/draft
    git merge upstream/draft 
  displayName: "Paso2"
- script: |
    ls
    cp -r ./* ../github/wiki-uv
    cp -r ./.attachments/* ../github/wiki-uv/.attachments
    cd ../github/wiki-uv
    ls 

    git add . && git commit -m "actualizacion documentacion"    
    git push origin draft
  displayName: "Paso3"
<<<<<<< HEAD
=======
>>>>>>> b1c1bb6eaa3a241764a64715047e23aff4c4c71f
>>>>>>> f1538349fc4a3c4f903cd91ea5e74d6e27bb1137
